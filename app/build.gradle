apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "org.sonarqube"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.rba.sonarqubedemo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

sonarqube {
    //noinspection GroovyAssignabilityCheck
    properties {

        property "sonar.projectName", "SonarQubeDemo"
        property "sonar.projectKey", "sonar-qube-demo"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "b4fae968dbb2ee6d558fd8028e45cdd11976b1d4"
        //property 'sonar.scm.provider', "git"
        property "sonar.language","kotlin"
        property "sonar.sourceEncoding", "UTF-8"

        property "sonar.sources", "src/main/java"

        // Analyze tests classes
        if (project.plugins.hasPlugin('com.android.application')) {
            property "sonar.tests", "src/test/java, src/androidTest/java"
        } else {
            property "sonar.tests", "src/test/java"
        }
    }
}
